from avclass_common import AvLabels
from operator import itemgetter
import json
import pkg_resources

def labeler(vtreport):
    # Select hash used to identify sample, by default MD5
    hash_type = 'sha256'
    alias = pkg_resources.resource_filename('avclass', 'default.aliases')
    gen = pkg_resources.resource_filename('avclass', 'default.generics')
    av = None

    # Create AvLabels object
    av_labels = AvLabels(gen, alias, av)

    # Process each JSON
    with open(vtreport, 'r') as fd:
        #first_token_dict = {}
        #token_count_map = {}
        #pair_count_map = {}
        #token_family_map = {}

        for line in fd:
            # If blank line, skip
            if line == '\n':
                continue

            # Read JSON line and extract sample info (i.e., hashes and labels)
            vt_rep = json.loads(line)
            sample_info = av_labels.get_sample_info(vt_rep, vtreport)
            name = getattr(sample_info, hash_type)

            # Get the distinct tokens from all the av labels in the report
            try:
                # Get distinct tokens from AV labels
                tokens = av_labels.get_family_ranking(sample_info).items()

                # Top candidate is most likely family name
                if tokens:
                    family = tokens[0][0]
                else:
                    family = "UNKNOWN"

                # Return family
                return family.upper()

            except:
                family = "ERROR"
                return family.upper()
